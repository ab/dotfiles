#!/bin/bash
# ^ clue vim into the fact that this is a bash file

binstall() {
    local log="$HOME/brew-install.log"
    for name in "$@"; do
        if ! awk '{print $NF}' "$log" | grep -x -- "$name" >/dev/null; then
            date "+%F %R	$name" >> "$log"
        fi
    done
    brew install "$@"
}

if [ -e ~/.conf/bashrc.local ]; then
    source ~/.conf/bashrc.local
fi

# GNU utility overrides
# TODO: this should maybe be done with PATH stuff instead
if which gsha1sum >/dev/null 2>&1; then
    for type in md5 sha1 sha224 sha256 sha384 sha512; do
        alias "${type}sum"="g${type}sum"
    done
fi

for name in readlink stat shred; do
    alias "$name"="g$name"
done

if [ -e /usr/local/bin/gls ]; then
    alias ls='/usr/local/bin/gls --color=auto'
fi

# homebrew bash completion
if [ -f "$(brew --prefix)/etc/bash_completion" ]; then
    . "$(brew --prefix)/etc/bash_completion"
fi

# homebrew aws bash completion
if which aws_completer >/dev/null 2>&1; then
    complete -C aws_completer aws
fi

# skip git commit -S if gpg not present
if ! which gpg >/dev/null 2>&1 ; then
    git_commit_s() {
        git commit "$@"
    }
fi
# actually skip it always on OS X
export SKIP_GIT_SIGN=1

if [ -e /usr/local/opt/groovy/libexec ]; then
    export GROOVY_HOME="/usr/local/opt/groovy/libexec"
fi

#alias sshpiv='ssh -I /usr/local/lib/opensc-pkcs11.so'
#alias sshpivi='ssh -I /usr/local/lib/opensc-pkcs11.so -o StrictHostKeyChecking=no'
alias sshpiv='ssh -I /usr/local/share/centrifydc/lib/pkcs11/tokendPKCS11.so'
alias sshpivi='ssh -I /usr/local/share/centrifydc/lib/pkcs11/tokendPKCS11.so -o StrictHostKeyChecking=no'
alias ssh-add-piv='ssh-add -s /usr/local/share/centrifydc/lib/pkcs11/tokendPKCS11.so'

# pip should only run if there is a virtualenv currently activated
export PIP_REQUIRE_VIRTUALENV=true

NF() {
    awk '{ print $NF }'
}

LOCALPROXY_DIR=/Users/Shared/www/stuff
LOCALPROXY_LINK=/Users/Shared/www/stuff/proxy-switch.pac
localproxy-get-current() {
    greadlink -e "$LOCALPROXY_LINK" && ret=$? || ret=$?
    if [ "$ret" -ne 0 ]; then
        echo >&2 "readlink: error $ret - $LOCALPROXY_LINK"
        return "$ret"
    fi
}
localproxy-enable() {
    localproxy-switch proxy-zokor.pac
}
localproxy-disable() {
    localproxy-switch proxy-disabled.pac
}
localproxy-switch() {
    if [ $# -lt 1 ]; then
        echo >&2 "usage: switch-localproxy BASENAME_PAC"
    fi
    local desired
    desired="$LOCALPROXY_DIR/$1"
    if [ ! "$(localproxy-get-current)" = "$desired" ]; then
        ln -sfv "$desired" "$LOCALPROXY_LINK"
    fi
}

enproxy-cntlm() {
    local proxy
    proxy=http://localhost:3128
    echo "export http_proxy=$proxy"
    echo "export https_proxy=$proxy"
    export http_proxy="$proxy"
    export https_proxy="$proxy"
}

auto-enproxy
